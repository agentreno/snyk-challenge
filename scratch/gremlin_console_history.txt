   0  :remote connect tinkerpop.server conf/neptune-remote.yaml
   1  :remote console
   2  graph = TinkerFactory.createModern()
   3  g = graph.traversal()
   4  g.V()
   5  g.V(1)
   6  g.V(1).values('name')
   7  g.V(1).outE('knows')
   8  g.V(1).outE('knows').inV().values('name')
   9  g.V(1).out('knows').values('name')
  10  g.V(1).out('knows').has('age', gt(30)).values('name')
  11  graph = TinkerGraph.open()
  12  g = graph.traversal()
  13  v1 = g.addV('person').property(id, 1).property('name', 'marko').property('age', 29).next()
  14  v2 = g.addV("software").property(T.id, 3).property("name", "lop").property("lang", "java").next()
  15  g.addE("created").from(v1).to(v2).property(T.id, 9).property("weight", 0.4)
  16  g.V().has('name','marko')
  17  g.V().has('person','name','marko')
  18  g.V().has('person','name','marko').outE('created')
  19  g.V().has('person','name','marko').out('created')
  20  g.V().has('person','name','marko').out('created').values('name')
  21  graph = TinkerFactory.createModern()
  22  g = graph.traversal()
  23  g.V().has('person','name',within('vadas','marko')).values('age')
  24  g.V().has('person','name',within('vadas','marko')).values('age').mean()  25  g.V().has('person','name','marko').
  26             out('created').in('created').
  27             values('name')
  28   g.V().has('person','name','marko').as('exclude').
  29             out('created').in('created').
  30             where(neq('exclude')).
  31             values('name')
  32  g.V().as('a').out().as('b').out().as('c').
  33             select('a','b','c')
  34  g.V().group().by(label)
  35  g.V().group().by(label).by('name')
  36  graph = TinkerFactory.createModern()
  37  g = graph.traversal()
  38  g.V(0
  39  )
  40  g.V()
  41  graph = TinkerGraphFactory.createTinkerGraph()
  42  g.V(0)
  43  g.V(1)
  44  g.V(1).label()
  45  g.V(1).out()
  46  g.V(1).out().out()
  47  graph = TinkerFactory.createModern()
  48  g = graph.traversal()
  49  g.V(1).until(not(outE())).repeat(out())
  50  g.V(1).until(not(outE())).repeat(__.out())
  51  g.V(1).out().times(2)
  52  g.V(1).repeat(out().times(2))
  53  g.V(1).repeat(out()).times(2)
  54  g.V(1).repeat(out()).until(has('name', 'ripple'))
  55  g.V(1).outE()
  56  g.V(1).not(outE())
  57  )
  58  not(g.V(1).outE())
  59  g.V(1).emit()
  60  g.V(1).until(not(out())).repeat(out())
  61  g.V(1).until(__.not(outE())).repeat(out())
  62  g.V(1).until(__.not(outE())).repeat(out()).path()
  63  graph = TinkerFactory.createModern()
  64  g = graph.traversal()
  65  g.V()
  66  g.V().drop()
  67  g.V()
  68  g.addV('package').next()
  69  g.addV('version').property('version_number', '1.0.0')
  70  g.addE('has').from(g.V(12)).to(g
  71  .V(13))
  72  g.V(12).property('name','package1')
  73  g.addV('package').property('name','package2').next()
  74  g.addV('version').property('version_number', '2.0.0')
  75  g.V()
  76  graph = TinkerFactory.createModern()
  77  g = graph.traversal()
  78  g.V().drop()
  79  g.addV('package').property('name','package2').next()
  80  g.addV('package').property('name','package1').next()
  81  g.addV('version').property('version_number', '2.0.0')
  82  g.addV('version').property('version_number', '1.0.0')
  83  g.addE('has').from(g.V(14)).to(g.V(18))
  84  g.addE('has').from(g.V(12)).to(g.V(16))
  85  g.addE('depends').from(g.V(18)).to(g.V(16))
  86  g.V(14).until(__.not(outE())).repeat(out('has').out('depends')).path()
  87  g.V(14).until(__.not(outE())).repeat(out('has').out('depends').in('has')).path()
  88  g.V(14).until(__.not(out().outE())).repeat(out('has').out('depends').in('has')).path()
  89  g.V()
  90  g.V().drop()
  91  g.addV('package').property('name','package1').next()
  92  g.addV('package').property('name','package2').next()
  93  graph = TinkerFactory.createModern()
  94  g = graph.traversal()
  95  g.V().drop()
  96  g.addV('package').property('name','package1').next()
  97  g.addV('package').property('name','package2').next()
  98  g.addE('depends').from(g.V(12)).to(g.V(14))
  99  g.E(16)
 100  g.E(16).property('from_ver','1.0.0')
 101  g.addE('depends').from(g.V(12)).to(g.V(14))
 102  g.E(16).property('to_ver','2.0.0')
 103  g.E(17).property('from_ver','2.0.0')
 104  g.E(17).property('to_ver','3.0.0')
 105  g.V(12).out().has('from_ver','1.0.0').path()
 106  g.V(12).outE().has('from_ver','1.0.0').path()
 107  g.V(12).outE().has('from_ver','1.0.0').inV()
 108  g.V(12).outE().has('from_ver','1.0.0').inV().path()
 109  :history
